process PROD  = {

   # initialize  MessageLogger
   include "FWCore/MessageService/data/MessageLogger.cfi"

   service = Timing {}


   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 135799753
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 123456789
      }
   }
   
   include "SimGeneral/HepPDTESSource/data/pdt.cfi"


   # NOTE : if one wants to run with the SiStripDigitizer,
   #        then mag.field in the OscarProducer should be
   #        turned ON; otherwise it gets (re)created by the
   #        SiStripDigitizer, which seems to corrupt at all
   #        the edm::Event record


   # Step 1 : Event Generation

   # flat random E-gun, single muon
   #
   # if you want another particle type, replace the PartID
   # (standard STDHEP numbering scheme)
   #
   # to run it along with CMS detector simulation
   # (OscarProducer) make sure to select QGSP physics
   # list, instead DummyPhysics ("Dummy" has only EM
   # process and wont know to model interactions of
   # hadrons with matter)
   #
   source = FlatRandomEGunSource
   {
      untracked int32 maxEvents = 10
      untracked PSet PGunParameters =
      {
         # you can request more than 1 particle
         #untracked vint32  PartID = {211,11}
         untracked vint32 PartID = { 13 }
         untracked double MinEta = -3.5
         untracked double MaxEta = 3.5
         untracked double MinPhi = -3.14159265358979323846 # must be in radians
         untracked double MaxPhi =  3.14159265358979323846
         untracked double MinE  = 9.99
         untracked double MaxE  = 10.01
      }
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }

   # step 2 :
   # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
   
   # steps 3,4 :
   # G4 detector simulation and digitization
   #
   include "SimG4Core/Application/data/SIM-DIGI.cff"


   # Step 5 : Output module
   #
   module GEN-SIM-DIGI = PoolOutputModule
   {
      untracked string fileName = "evtgen_detsim_digi.root"
   }
   
   # Now order modules for execution, 
   # in this case - all modules explicitely listed in the path
   #
   # ( note : 
   #   one can just do path p1 = { VtxSmeared, doG4SimHitsDigi } )  
   #
   sequence trDigi = { siPixelDigis & siStripDigis }
   sequence calDigi = { ecalUnsuppressedDigis & hcalDigis }
   sequence muonDigi = { muonCSCDigis &  muonDTDigis & muonRPCDigis }
   sequence doDigi = { trDigi & calDigi & muonDigi  }
   path p1 = { VtxSmeared, g4SimHits, mix, doDigi }
   endpath outpath = { GEN-SIM-DIGI }

}
