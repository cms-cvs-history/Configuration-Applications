process JetMetGen = {

  source = PoolSource { 
    untracked vstring fileNames = {"file:reco-application-calorimetry-simulation.root"}
    untracked int32 maxEvents = -1
  }

  module out = PoolOutputModule {
    untracked string fileName = "reco-application-calorimetry-jetmet-gen.root"
    untracked vstring outputCommands = {
      "keep *",
      # drop mixer information
      "drop *_mix_*_*",
      # drop G4 objects
      "drop *_SimG4Object_*_*"
    }
  }
  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.fwkJobReports = {"reco-application-calorimetry-jetmet-gen.log.xml"}
 
  include "SimGeneral/HepPDTESSource/data/pdt.cfi"
  module genCandidates = HepMCCandidateProducer {
      string src = "source"
      untracked bool verbose = true
      bool stableOnly = true
      vstring excludeList = { }
  }

  include "RecoJets/JetProducers/data/GenJetKt.cfi"
  include "RecoJets/JetProducers/data/GenJetMcone5.cfi"
  include "RecoJets/JetProducers/data/GenJetMcone7.cfi"
  include "RecoJets/JetProducers/data/GenJetIcone5.cfi"
  module genMet =  METProducer {
    string src = "genCandidates"
  }

  module dump = AsciiOutputModule {
  }

  path p = { dump , genCandidates & GenJetKt & GenJetMcone5 & GenJetMcone7 & GenJetIcone5 & genMet }
  endpath e = 
  {
    out
  }
}
